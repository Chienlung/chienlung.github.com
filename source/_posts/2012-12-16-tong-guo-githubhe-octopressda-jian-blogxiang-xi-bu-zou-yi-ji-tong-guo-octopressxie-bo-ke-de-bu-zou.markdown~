---
layout: post
title: "通过github和octopress搭建Blog详细步骤以及通过Octopress写博客的步骤"
date: 2012-12-16 21:31
comments: true
categories: 
---

这篇文章是为像我一样的不懂ruby、不懂git的newbie写的，大牛请绕路。

开始之前先说点题外话，这几天对于我这个newbie来说是痛苦的，上段时间开始对Python极其感兴趣，自己又很喜欢豆瓣，所以想用豆瓣的API做点什么，于是为了获取Python版本的API，所以注册了github，但是我真的对这个网站毫无概念，就觉得跟网盘差不多，因为我相当孤陋寡闻，对于Linus开发的git听都没听过，我觉得自己简直弱爆了。这次通过搭建这个Blog，觉得github真的好酷！

搭建过程最最好的指导莫过于octopress的[官方文档][]，我开始为了图省劲，不停的搜索相关的搭建步骤，可是很失望，没有一个文档对我这个newbie的胃口。所以我就直接看官方文档，而且官方文档我也没全看，因为我只想快速把Blog搭起来，其它的我不想现在配置，facebook不是有句名言叫做*Done is better than perfect*吗？先搭起来再说。

 [官方文档]:http://octopress.org/docs/ 

[官方文档][]中，我重点看的文档主要是两部分，一部分是*Getting Started*里面的[Initial setup][]，另一部分是*Using Octopress*里面的[Deploying Octopress] []。其它的我觉得都是属于Perfect部分，我这里只说Done的部分。

 [Initial setup]:http://octopress.org/docs/setup/
 [Deploying Octopress]:http://octopress.org/docs/deploying/

#第一部分[Initial setup][]
1. 安装Git

	在*Before You Begin*中的第1步*Install Git*那个链接你就不要按了，在天朝打不开，每次遇到科技网站打不开的时候我就抓狂得很！怎么安装呢，如果你跟我一样用的是Ubuntu 12.04，那么打开你的Terminal，输入：
			sudo apt-get install git-core
	其它系统请自行Google。

2. 安装Ruby 1.9.3

	我选择的是RVM，因为那几天[rbenv][]这个链接我打不开，所以我用的是[RVM][]这个链接。严格按着每一步来执行。先是
			curl -L https://get.rvm.io | bash -s stable --ruby
	这个地方需要非常注意，这个命令执行后的提示非常重要，命令执行一会后会提示你输入
			q
	然后才能继续，这个没有问题，然后命令执行完毕后，会提示你运行
			source /home/chienlung/.rvm/scripts/rvm
	这个真的非常重要，否则后面安装Octopress时会出错，对于我这个Ruby小白来说我不知道为什么这样，但是这个命令很重要，我猜应该是运行rvm，否则后面那个命令会出错。运行完这个命令后。把文档中提示的下面三条命令：
			rvm install 1.9.3 
			rvm use 1.9.3 
			rvm rubygems latest
	运行完毕，RVM就算装完了。完事你可以输入
			ruby --version
	来查看你用的是否为ruby 1.9.3，这个没什么问题。
 [rbenv]:http://octopress.org/docs/setup/rbenv/
 [RVM]:http://octopress.org/docs/setup/rvm/

3. 安装Octopress

	[Setup Octopress][]时，严格执行文档中这三个命令即可：
			git clone git://github.com/imathis/octopress.git octopress
			cd octopress    # If you use RVM, You'll be asked if you trust the .rvmrc file (say yes).
			ruby --version  # Should report Ruby 1.9.3
	然后紧接着执行下面命令来安装依赖，也许你现在犹豫刚才`cd octopress`了，现在要不要退出来，千万别，如果没有提示，这些命令必须在这个文件夹下执行：
			gem install bundler # 这里可能因为墙，或者网速可能会超时，那就重复尝试，实在不行换个时间点再来做
			rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command，如果前面安的是RVM，这句不用执行
			bundle install  # 还记得前面装RVM时我那个说点很重要那个命令了吗，如果不执行那句，这里就会失败
	然后安装默认的Octopress theme，执行下面这个命令：
			rake install
	好了，到这里算是安装完Octopresss了。
 [Setup Octopress]:http://octopress.org/docs/setup/



#第二部分[Deploying to Github Pages][]


1. 创建[new Github repository][]

	这里先多说两句，在我们的Blog中为什么涉及到Github呢，因为，Github相当于我们的免费主机，我们把Blog的所有代码和相关内容都存储到了Github上，所以才有了这里的为我们的Blog创建一个Github仓库。[戳这][]进入创建repository，这里又有一个地方容易出错，就是repository name，这个名字的格式为*username.github.com*，这里的*username*必须跟你的github网站用户名相同，比如我的github用户名叫Chienlung，然后的repository name必须为*chienlung.github.com*，而不能是其它。开始我本来打算它*ponyo.github.com*，可是后面就是不成功，详细原因我还没去细究，先不管它，搭起来再说。后面Description你可也随便写，也可也不写。再后面一般选public，要是选private是要给github交钱的。再后面Initialize this repository with a README 前面的勾可以勾上也可也不勾上，它推荐勾上。好了，点击Create repository就完成了。
 [Deploying to Github Pages]:http://octopress.org/docs/deploying/github/
 [new Github repository]:https://github.com/new
 [戳这]:https://github.com/new
	这里还要多说几句，就是如果你申请github帐号后需要在本地系统生成SSH KEY，然后贴到你的github账户里，因为octopress命令是通过SSH方式进行Deploy的。如果你已经做过了，那就跳过这里。点击[Generating SSH Keys][]，这个页面有详细的生成SSH KEY的步骤：
	打开一个新的Terminal终端，按如下步骤进行：
	第一步输入：
			cd ~/.ssh #这个命令是检查你的用户目录下是否有一个叫.ssh的目录，如果没有的话直接跳到第三步，否则到第二步
	第二步输入：
			ls # 这个命令会列出.ssh目录下的子目录，看里面是否有个叫id_rsa的。反正我这没有，没有的话直接跳到第三步，否则继续
			mkdir key_backup # 创建一个叫key_backup的目录
			cp id_rsa* key_backup # 把id_rsa keypair拷贝到key_backup目录下，我对这里id_rsa为什么后面跟个星号，我不清楚，通配符吗？我没用过这个命令
			rm id_rsa* # 删除这个id_rsa keypair
	第三步输入(执行下面命令的时候，会问你是否输入一个文件来保存生成的key，官网要求什么也别输入，直接按Enter键即可)：
			ssh-keygen -t rsa -C "your_email@youremail.com" # 用你提供的Email生成key，这里的Email没有详细说明，我用的是注册github时用的那个。 
	执行上面这个命令后，会有下面的提示：
			Enter passphrase (empty for no passphrase): # 这里的passphrase就是密码的意思，你随便输入一个密码，自己记住，以后deploy时会用到这个密码，这个密码也可以为空
			Enter same passphrase again: # 再次输入密码进行确认
	第四步输入：
			sudo apt-get install xclip # 安装xclip，这是一个很碉堡的clipboard
			xclip -sel clip < ~/.ssh/id_rsa.pub # 把id_rsa.pub文件里的内容拷贝到这个碉堡的clipboard上
	然后点击[这里][]去你的github“账户设置”，在这个页面左边侧条里有个[SSH Keys][]链接，戳它转到一个新的页面，点击右上角那个“Add SSH Key”按钮，“Title”栏里你随便写，然后在“Key”栏里按Ctrl+V，就把你的SSH Key粘贴到里面了。然后点击“Add Key”按钮，好了，大功告成！
 [Generating SSH Keys]:https://help.github.com/articles/generating-ssh-keys
 [这里]:https://github.com/settings/profile
 [SSH Keys]:https://github.com/settings/ssh
2. 开始Deloy你的Blog
	执行下面的命令：
			rake setup_github_pages # 这个命令执行后，会要求你输入你为Blog建立的repository的SSH地址，这个提示是个坑，而且不只有我一个newbie掉进去了，下面详细来说这个坑。
	看[stackoverflow关于这个坑的问答][]，如果按照这个提示，我应该输入`git@github.com:Chienlung/chienlung.github.com`，结果就是说这个repository找不到，因为这个根本不是repository的SSH地址，后面还必须要加上`.git`，所以正确的输入应该为`git@github.com:Chienlung/chienlung.github.com.git`。
	然后输入下面的命令：
			rake generate # 这个命令就是把按照所有的更新在本地生成网站。注意这个命令的输出，有时候你的更改出错的时候，这个命令不会执行成功，然后你可也根据输出来检查自己到底哪里出错了。
	然后输入下面的命令：
			rake deploy # 这个命令开始部署网站了，它也会更新github我们这个repository的master分支。如果是第一次用这个命令，会要求输入密码，这个密码就是前面生成SSH Key时你设定的那么个密码。	
	上面这三个命令以后会频繁使用，只要你修改了Blog的配置，或者写了增删改了文章，就要执行上面三个命令来更新你的Blog。执行`rake deploy`成功后，github会给你的邮箱发送邮件，告诉你成功了过一会或者立刻你就能看到你Blog的更新，这个的确有延迟，但是延迟不会很久。
 
 [stackoverflow关于这个坑的问答]:http://stackoverflow.com/questions/12060903/github-error-repository-not-found-when-installing-octopress/13888445#13888445
3. 更新Blog在github的repository的source分支
	执行下面的命令：
		git add .
		git commit -m 'your message' # 这个‘your message’你可以随便写，反正我这个小白是这么个干的
		git push origin source # 这个命令把本地的关于Blog的源代码完全push到了github上存储起来了。
	以后你对Blog有所更改后，执行完毕这些命令后，去这个分支下点开文件你就会看到一些改变。这三个命令也经常使用，跟上面那三个一样，你对你的Blog增删改以后要执行这个命令来更新repository。
到这里，算是完事了，输入你Blog的网址，类似与我这个`chienlung.github.com`，你就可以看到你的Blog啦。

#第三部分：本地调试
我觉得Octopress牛逼的地方，也是吸引我的地方就是写博客跟写程序似的。写完了你可以现在本地“调试”看结果，然后满意了再deploy到远端，下面我用修改Blog配置来举个例子。
找到Octopress文件夹下有个\_config.yml文件，打开它，修改开头的一下内容：
	url: http://Chienlung.github.com
	title: My Octopress Blog
	subtitle: A blogging framework for hackers.
	author: Your Name
	simple_search: http://google.com/search
	description:
把这些内容修改为下面的样子：
	url: http://Chienlung.github.com
	title: 陆彦帑的博客
	subtitle: 宗介波妞手拉手，宗介永远爱波妞。 
	author: 陆彦帑
	simple_search: http://google.com/search
	description: 愿我如星君如月，夜夜流光相皎洁。
修改完后保存。然后执行如下命令：
	rake generate # 根据最新修改生成Blog，这里对于我等不懂Ruby的newbie来说又有个坑。
[stackoverflow也有关于这个坑的问答][]，好吧，这个问答和上面那个都是我掉进去的坑，然后在stackoverflow上没有找到答案，我自己解决后顺便回答的。我掉进去的坑就是在description后面输入文字后rake generate时报错，我仔细看了编译输出然后把url后面的冒号连同空格复制到description后面，重新generate后才成功的，我猜是编码问题。
然后执行下面的命令：
	rake preview # 这个命令很碉堡，下面详细说。
在deploy之前执行这个命令，然后打开浏览器输入`localhost:4000`，就可以在本地查看你的修改后的Blog。而且，还有很重要的一点，这个命令执行过程中，你还可以接着修改你的Blog，修改完就立马显示到`localhost:4000`Blog内，直到你满意，然后按`Ctrl+C`退出这个命令。然后你就可以执行上面`开始Deloy你的Blog`和`更新Blog在github的repository的source分支`，里面我提到的六个命令来更新github和blog。

 [stackoverflow也有关于这个坑的问答]:http://stackoverflow.com/questions/10086806/i-can-not-do-any-modify-after-octopress-installed/13898285#13898285

#第四步分：如何用Octopress写Blog以及写博客的两个命令
我也是newbie，所以对这俩命令细节还不太清楚，而且我先在只会用其中一个。
先说我不会用的：
	rake new_page["文件名字"] # 我还没研究这个命令
我用过的一个：
	rake new_post["文件名字"] # 文件名字应该不能跟文件后缀，你可也试试加上会怎样。octopress内部会处理这个文件名，下面详细说下。
比如我这篇文章的文件名字叫`通过github和和octopress搭建Blog步骤以及容易出错的地方`，它在home/octopress/source/posts目录下，而在这里的名字却是`2012-12-16-tong-guo-githubhe-he-octopressda-jian-blogbu-zou-yi-ji-rong-yi-chu-cuo-de-di-fang.markdown`，看这个名字是不是很碉堡，注意后缀自动设置为了markdown。
好了，写了好几个小时，octopress真是个很合程序员口味的博客，这篇博客我就是在VIM中用Markdown写的。给你markdown语法的[英文版地址][]和[中文简体版地址][]以及[中文繁体版地址][]。
 [英文版地址]:http://daringfireball.net/projects/markdown/syntax
 [中文简体版地址]:http://wowubuntu.com/markdown/
 [中文繁体版地址]:http://markdown.tw/
看语法文档的时候如果能一边看一边练习就好了，当然很好了，所以再提供一个[Markdown在线编辑网站][]。
 [Markdown在线编辑网站]:http://www.ctrlshift.net/project/markdowneditor/


